setwd("~/GitHub/ccostr")
build_vignettes()
devtools::use_vignette("my-vignette")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ccostr)
head(hcost)
ccmean(hcost, L = 1461, addInterPol = 1)
plot(ccmean(hcost, L = 1461, addInterPol = 1))
plot(ccmean(hcost, L = 1461, addInterPol = 1))
head(hcost)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#devtools::install_github("HaemAalborg/ccostr", ref = "Version-0.0.2")
library(ccostr)
library(ggplot2)
library(knitr)
library(parallel)
library(msm)
sim <- simCostData(n = 1000, dist = "unif", censor = "light", L = 10)
est <- ccmean(sim$censoredCostHistory)
est
plot(est) + geom_hline(yintercept = 40000, linetype = "dotted", size = 1)
nSim   <- 10
nYears <- 10
indv   <- 100 # increating individuals increases computing time exponential
## true mean for unif is 40000 and exp is 35956
unif_light <- lapply(1:nSim, function(x) simCostData(n = indv, dist = "unif", censor = "light", exp = TRUE, L = nYears))
unif_heavy <- lapply(1:nSim, function(x) simCostData(n = indv, dist = "unif", censor = "heavy", exp = TRUE, L = nYears))
exp_light  <- lapply(1:nSim, function(x) simCostData(n = indv, dist = "exp",  censor = "light", exp = TRUE, L = nYears))
exp_heavy  <- lapply(1:nSim, function(x) simCostData(n = indv, dist = "exp",  censor = "heavy", exp = TRUE, L = nYears))
### Estimate from censored data
nCores <- 2
cl <- makeCluster(nCores)
clusterExport(cl = cl, c("unif_light", "unif_heavy", "exp_light", "exp_heavy"))
invisible(clusterEvalQ(cl = cl, {library(dplyr)
library(ccostr)
library(data.table)
library(survival)}))
est_unif_light <- parLapply(cl, unif_light, function(x) ccmean(x$censoredCostHistory, L = 10))
est_unif_heavy <- parLapply(cl, unif_heavy, function(x) ccmean(x$censoredCostHistory, L = 10))
est_exp_light  <- parLapply(cl, exp_light,  function(x) ccmean(x$censoredCostHistory, L = 10))
est_exp_heavy  <- parLapply(cl, exp_heavy,  function(x) ccmean(x$censoredCostHistory, L = 10))
stopCluster(cl)
## Summarize
results_unif_light <- do.call(rbind, lapply(est_unif_light, function(x) x[[3]]))
results_unif_heavy <- do.call(rbind, lapply(est_unif_heavy, function(x) x[[3]]))
results_exp_light  <- do.call(rbind, lapply(est_exp_light,  function(x) x[[3]]))
results_exp_heavy  <- do.call(rbind, lapply(est_exp_heavy,  function(x) x[[3]]))
results_true <- data.frame("unif_light" = 40000,
"unif_heavy" = 40000,
"exp_light"  = 35956,
"exp_heavy"  = 35956)
results_mean <- data.frame("unif_light" = mean(sapply(unif_light, function(x) mean(x$totalCost))),
"unif_heavy" = mean(sapply(unif_heavy, function(x) mean(x$totalCost))),
"exp_light"  = mean(sapply(exp_light, function(x) mean(x$totalCost))),
"exp_heavy"  = mean(sapply(exp_heavy, function(x) mean(x$totalCost))))
results_bias <- data.frame("unif_light" = (colMeans(results_unif_light)),
"unif_heavy" = (colMeans(results_unif_heavy)),
"exp_light"  = (colMeans(results_exp_light)),
"exp_heavy"  = (colMeans(results_exp_heavy)))
results <- rbind(results_true, results_mean, results_bias)
row.names(results) <- c("true_mean", "simulation_mean", colnames(results_unif_light))
kable(results)
results_bias <- cbind(round(results[,c(1,2)] - 40000,2),
round(results[,c(3,4)] - 35956,2))
kable(results_bias)
cov_unif_light <- do.call(rbind, lapply(est_unif_light, function(x) ifelse(x[[4]][4,] >= 40000 & x[[4]][5,] <= 40000, 1, 0)))
cov_unif_heavy <- do.call(rbind, lapply(est_unif_heavy, function(x) ifelse(x[[4]][4,] >= 40000 & x[[4]][5,] <= 40000, 1, 0)))
cov_exp_light  <- do.call(rbind, lapply(est_exp_light,  function(x) ifelse(x[[4]][4,] >= 35956 & x[[4]][5,] <= 35956, 1, 0)))
cov_exp_heavy  <- do.call(rbind, lapply(est_exp_heavy,  function(x) ifelse(x[[4]][4,] >= 35956 & x[[4]][5,] <= 35956, 1, 0)))
results_coverage <- data.frame("unif_light" = (colMeans(cov_unif_light, na.rm = T)),
"unif_heavy" = (colMeans(cov_unif_heavy, na.rm = T)),
"exp_light"  = (colMeans(cov_exp_light,  na.rm = T)),
"exp_heavy"  = (colMeans(cov_exp_heavy,  na.rm = T)))
kable(results_coverage, digits = 3)
devtools::build()
library(ccostr)
devtools::install_github("HaemAalborg/ccostr", build_vignettes = TRUE)
library(ccostr)
browseVignettes("ccostr")
devtools::install_github("HaemAalborg/ccostr", build_vignettes = TRUE)
devtools::install_github("HaemAalborg/ccostr", build_vignettes = TRUE, force=TRUE)
devtools::build(vignettes=TRUE)
library(ccostr)
devtools::build(vignettes=TRUE)
library(ccostr)
browseVignettes("ccostr")
vignette(package = "ccostr")
remove.packages("ccostr", lib="~/R/R-3.6.0/library")
vignette(package = "ccostr")
library(ccostr)
vignette(package = "ccostr")
library(ccostr)
sim <- simCostData(n = 1000, dist = "unif", censor = "heavy", L = 10)
c2 <- ccmean(sim$censoredCostHistory)
c2
# True value 40.000
plot(c2) + geom_hline(yintercept = 40000, linetype="dotted", size=1) + labs(subtitle="True value = 40.000")
#devtools::install_github("HaemAalborg/ccostr", ref = "Version-0.0.2")
library(tidyverse)
library(survival)
library(ccostr)
c1 <- ccmean(hcost, L = 1461, addInterPol = 1)
c1
sim <- simCostData(n = 1000, dist = "unif", censor = "heavy", L = 10)
c2 <- ccmean(sim$censoredCostHistory)
c2
# True value 40.000
plot(c2) + geom_hline(yintercept = 40000, linetype="dotted", size=1) + labs(subtitle="True value = 40.000")
results <- read_csv("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
results$RDX3
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
results_bias
results_coverage
results_coverage
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
results_bias
colnames(results_coverage) <- c("AS", "CC", "BT", "ZT")
results_coverage
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
results_bias
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
results_coverage
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
kable(results_bias)
library(knitr)
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
kable(results_bias)
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
kable(results_coverage)
View(results_bias)
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
rownames(results_bias) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
kable(results_bias)
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
kable(results_coverage)
kable(results_bias, results_coverage)
install.packages("kableExtra")
new <- rbind.data.frame(results_bias, results_coverage)
View(new)
new <- cbind.data.frame(results_bias, results_coverage)
new <- rbind.data.frame(results_bias, results_coverage)
rownames(results_coverage) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
View(results_coverage)
results_coverage2 <- results_bias <- NA
results_coverage2 <- rbind(results_coverage, results_bias[,1])
results_coverage2 <- rbind(results_coverage, results_bias[1,])
results_coverage2 <- rbind(results_coverage, results_bias[,1])
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
results_coverage2 <- rbind(results_coverage, results_bias[,1])
View(results_coverage2)
results_bias[,1]
results_coverage2 <- rbind(results_coverage, results_bias[1,])
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2[1,] <- NA
results_coverage2[2,] <- NA
new <- cbind.data.frame(results_bias, results_coverage)
new <- rbind.data.frame(results_bias, results_coverage)
new <- cbind.data.frame(results_bias, results_coverage)
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
rownames(results_bias) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
kable(results_bias)
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
kable(results_coverage)
kable(results_bias,results_coverage)
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2[1,] <- NA
results_coverage2[2,] <- NA
new <- cbind.data.frame(results_bias, results_coverage)
new <- cbind.data.frame(results_bias, results_coverage2)
new <- new[1,5,2,6,3,7,4,8]
new <- new[c(1,5,2,6,3,7,4,8),]
new <- new[,c(1,5,2,6,3,7,4,8)]
new <- cbind(results_bias, results_coverage2)
new <- new[,c(1,5,2,6,3,7,4,8)]
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2[1,] <- NA
results_coverage2[2,] <- NA
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2[5,] <- NA
results_coverage2[6,] <- NA
new <- cbind(results_bias, results_coverage2)
new <- new[,c(1,5,2,6,3,7,4,8)]
new <- cbind(results_bias, results_coverage2[,c(5,6,1,2,3,4)])
results_coverage2[,c(5,6,1,2,3,4)]
new <- cbind(results_bias, results_coverage2[c(5,6,1,2,3,4),])
new <- new[,c(1,5,2,6,3,7,4,8)]
kable(new) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Group 1" = 2, "Group 2" = 2, "Group 3" = 2, "Group 4" = 2))
library(kableExtra)
kable(new) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Group 1" = 2, "Group 2" = 2, "Group 3" = 2, "Group 4" = 2))
colnames(new) <- c("Bias", "Coverage","Bias", "Coverage","Bias", "Coverage","Bias", "Coverage")
library(kableExtra)
kable(new) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "UnifLight" = 2, "UnifHeavy" = 2, "ExpLight" = 2, "ExpHeavy" = 2))
kable(new) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Unif Light" = 2, "Unif Heavy" = 2, "Exp Light" = 2, "Exp Heavy" = 2))
resluts_coverage *100
results_coverage *100
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
rownames(results_bias) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
kable(results_bias)
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
kable(results_coverage)
results_coverage *100
results_coverage2 <- rbind(results_coverage, results_bias[1,], results_bias[2,])
results_coverage2[5,] <- NA
results_coverage2[6,] <- NA
new <- cbind(results_bias, results_coverage2[c(5,6,1,2,3,4),])
new <- new[,c(1,5,2,6,3,7,4,8)]
colnames(new) <- c("Bias", "Coverage","Bias", "Coverage","Bias", "Coverage","Bias", "Coverage")
library(kableExtra)
kable(new, digits = 2) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Unif Light" = 2, "Unif Heavy" = 2, "Exp Light" = 2, "Exp Heavy" = 2))
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
rownames(results_bias) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
results_coverage2 <- rbind(results_coverage*100, results_bias[1,], results_bias[2,])
results_coverage2[5,] <- NA
results_coverage2[6,] <- NA
new <- cbind(results_bias, results_coverage2[c(5,6,1,2,3,4),])
new <- new[,c(1,5,2,6,3,7,4,8)]
colnames(new) <- c("Bias", "Coverage","Bias", "Coverage","Bias", "Coverage","Bias", "Coverage")
library(kableExtra)
kable(new, digits = 2) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Unif Light" = 2, "Unif Heavy" = 2, "Exp Light" = 2, "Exp Heavy" = 2))
View(results_coverage)
t <- runif(n = n, min = 0, max = 10)
t <- rexp(n = n, rate = 1/6)
n <-  1000
t <- runif(n = n, min = 0, max = 10)
sum(t<C)
C <- rexp(n = n, rate = 1/16)
sum(t<C)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
sum(t<C1)
sum(t<C2)
sum(t<C3)
sum(t<C4)
n <-  1000
t <- runif(n = n, min = 0, max = 10)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
sum(t<C1)
sum(t<C2)
sum(t<C3)
sum(t<C4)
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
sum(t<C1)
sum(t<C2)
sum(t<C3)
sum(t<C4)
sum(t<C1)
sum(t<C1)-1000
1000 -sum(t<C1)
1000 - sum(t<C1)/1000*100
(1000 - sum(t<C1))/1000*100
t <- runif(n = n, min = 0, max = 10)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
n <-  1000000
t <- runif(n = n, min = 0, max = 10)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
t <- rexp(n = n, rate = 1/6)
C1 <- rexp(n = n, rate = 1/16)
C2 <- rexp(n = n, rate = 1/9)
C3 <- runif(n = n, min = 0, max = 20)
C4 <- runif(n = n, min = 0, max = 12.5)
(n - sum(t<C1))/n*100
(n - sum(t<C2))/n*100
(n - sum(t<C3))/n*100
(n - sum(t<C4))/n*100
load("K:/FORSK-Projekt/Projekter/Scientific Projects/195_Ccostr/JOSS/results.Rdata")
rownames(results_bias) <- c("TrueMean", "SimulationMean","AS", "CC", "BT", "ZT")
rownames(results_coverage) <- c("AS", "CC", "BT", "ZT")
results_coverage2 <- rbind(results_coverage*100, results_bias[1,], results_bias[2,])
results_coverage2[5,] <- NA
results_coverage2[6,] <- NA
new <- cbind(results_bias, results_coverage2[c(5,6,1,2,3,4),])
new <- new[,c(1,5,2,6,3,7,4,8)]
colnames(new) <- c("Bias", "Coverage","Bias", "Coverage","Bias", "Coverage","Bias", "Coverage")
library(kableExtra)
options(knitr.kable.NA = '')
kable(new, digits = 2) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Unif Light" = 2, "Unif Heavy" = 2, "Exp Light" = 2, "Exp Heavy" = 2))
library(ccostr)
hcost
ccmean(hcost)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
### Load precomputed results
load(system.file("extdata", "simData.Rdata", package = "ccostr"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ccostr)
library(ggplot2)
library(knitr)
library(parallel)
library(msm)
set.seed(123)
sim <- simCostData(n = 1000, dist = "unif", censor = "light", cdist = "exp", L = 10)
est <- ccmean(sim$censoredCostHistory)
est
plot(est) + geom_hline(yintercept = 40000, linetype = "dotted", size = 1)
### Load precomputed results
load(system.file("extdata", "simData.Rdata", package = "ccostr"))
library(ccostr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
### Load precomputed results
load(system.file("extdata", "simData.Rdata", package = "ccostr"))
results_unif_light <- do.call(rbind, lapply(est_unif_light, function(x) x[[3]]))
results_unif_heavy <- do.call(rbind, lapply(est_unif_heavy, function(x) x[[3]]))
results_exp_light  <- do.call(rbind, lapply(est_exp_light,  function(x) x[[3]]))
results_exp_heavy  <- do.call(rbind, lapply(est_exp_heavy,  function(x) x[[3]]))
results_true <- data.frame("unif_light" = 40000,
"unif_heavy" = 40000,
"exp_light"  = 35956,
"exp_heavy"  = 35956)
results_bias <- data.frame("unif_light" = (colMeans(results_unif_light)),
"unif_heavy" = (colMeans(results_unif_heavy)),
"exp_light"  = (colMeans(results_exp_light)),
"exp_heavy"  = (colMeans(results_exp_heavy)))
results <- rbind(results_true, results_bias)
row.names(results) <- c("true_mean", colnames(results_unif_light))
kable(results)
results_bias <- cbind(round(results[,c(1,2)] - 40000,2),
round(results[,c(3,4)] - 35956,2))
kable(results_bias)
cov_unif_light <- do.call(rbind, lapply(est_unif_light, function(x) ifelse(x[[4]][4,] >= 40000 & x[[4]][5,] <= 40000, 1, 0)))
cov_unif_heavy <- do.call(rbind, lapply(est_unif_heavy, function(x) ifelse(x[[4]][4,] >= 40000 & x[[4]][5,] <= 40000, 1, 0)))
cov_exp_light  <- do.call(rbind, lapply(est_exp_light,  function(x) ifelse(x[[4]][4,] >= 35956 & x[[4]][5,] <= 35956, 1, 0)))
cov_exp_heavy  <- do.call(rbind, lapply(est_exp_heavy,  function(x) ifelse(x[[4]][4,] >= 35956 & x[[4]][5,] <= 35956, 1, 0)))
results_coverage <- data.frame("unif_light" = (colMeans(cov_unif_light, na.rm = T)),
"unif_heavy" = (colMeans(cov_unif_heavy, na.rm = T)),
"exp_light"  = (colMeans(cov_exp_light,  na.rm = T)),
"exp_heavy"  = (colMeans(cov_exp_heavy,  na.rm = T)))
kable(results_coverage, digits = 3)
